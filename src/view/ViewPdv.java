/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import controller.ControllerCaixa;
import controller.ControllerCliente;
import controller.ControllerProdutos;
import controller.ControllerTipoPagamento;
import controller.ControllerVendas;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.ModelCaixa;
import model.ModelCliente;
import model.ModelProdutos;
import model.ModelSessaoUsuario;
import model.ModelTipoPagamento;
import model.ModelVendas;
import util.BLDatas;
import util.DataClasses;

/**
 *
 * @author Administrador
 */
public class ViewPdv extends javax.swing.JFrame {
    ControllerVendas controllerVendas = new ControllerVendas();
    ModelVendas modelVendas = new ModelVendas();
    ModelProdutos modelProdutos = new ModelProdutos();
    ArrayList<ModelVendas> listaModelVendas = new ArrayList<>();
    ArrayList<ModelCliente> listaModelClientes = new ArrayList<>();
    ArrayList<ModelProdutos> listaProdutos = new ArrayList<>();
    ControllerCliente controllerCliente = new ControllerCliente();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ControllerTipoPagamento controllerTipoPagamento = new ControllerTipoPagamento();
    ModelCaixa modelCaixa = new ModelCaixa();
    ControllerCaixa controllerCaixa = new ControllerCaixa();
    ArrayList<ModelTipoPagamento> listaModelTipoPagamentos = new ArrayList<>();
    float valorCartao, valorCheque, valorDinheiro, valorVale, 
            valorConvenio, valorDebito, valorTotal=0,
            desconto;
    public int quantidadeProduto, returnStatus, codigoVenda, id_terminal;
    public String codigoProduto,pNomeUsuario, cpf;
    private ViewPagamentoPDV viewPagamentoPDV;
    private NumberFormat nf = NumberFormat.getCurrencyInstance();

    /**
     * Creates new form ViewPdv
     */
    public ViewPdv(ModelCaixa caixa) {
        this.modelCaixa=caixa;
        
        Dimension tam = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(tam);
        setPreferredSize(tam);
        
        //setExtendedState(JFrame.MAXIMIZED_BOTH);
        initComponents();
        quantidadeProduto = 1;
        setLocationRelativeTo(null);
        configurar();
        this.viewPagamentoPDV = new ViewPagamentoPDV(this, true);
        //this.tbProdutos.getColumnModel().getColumn(2).setMaxWidth(300);
        this.tbProdutos.getColumnModel().getColumn(0).setPreferredWidth(50);
        this.tbProdutos.getColumnModel().getColumn(1).setPreferredWidth(120);
        this.tbProdutos.getColumnModel().getColumn(2).setPreferredWidth(350);
        this.tbProdutos.getColumnModel().getColumn(3).setPreferredWidth(50);
        this.tbProdutos.getColumnModel().getColumn(4).setPreferredWidth(100);
        this.tbProdutos.getColumnModel().getColumn(5).setPreferredWidth(100);
        UIManager.put("Button.defaultButtonFollowsFocus", Boolean.TRUE);
        /**
        if(this.modelCaixa.retornarStatus()==ModelCaixa.CAIXA_FECHADO){
            new ViewAberturaCaixa().setVisible(true);
        }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel13 = new javax.swing.JLabel();
        lblProduto = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jcbImprimirPDF = new javax.swing.JCheckBox();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jLabel3 = new javax.swing.JLabel();
        jlOperador = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtcpf = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        lb_cliente = new javax.swing.JLabel();
        jtfValorPagar = new javax.swing.JLabel();
        lb_subtotal = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lb_valorunitario = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lb_Quantidade = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jtfCodigoProduto = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbProdutos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmArquivo = new javax.swing.JMenu();
        jmiSair = new javax.swing.JMenuItem();
        jmComandos = new javax.swing.JMenu();
        jmiAlterarQuantidade = new javax.swing.JMenuItem();
        jmiFinalizarVenda = new javax.swing.JMenuItem();
        jmiPesquisarProduto = new javax.swing.JMenuItem();
        jmiEstoque = new javax.swing.JMenuItem();
        jmiCancelarProduto = new javax.swing.JMenuItem();
        jmiImprimirCupom = new javax.swing.JMenuItem();

        jLabel13.setText("jLabel13");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ponto de Vendas");
        setResizable(false);

        lblProduto.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblProduto.setForeground(new java.awt.Color(102, 102, 255));
        lblProduto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProduto.setText("Produto");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jcbImprimirPDF.setText("Gerar PDF da venda para imprimir");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Status do caixa");

        jlOperador.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlOperador.setText("nome do operador");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Operador:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Caixa: 1");

        try {
            txtcpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtcpf.setToolTipText("CPF de Cliente");
        txtcpf.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtcpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcpfKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("CPF");

        lb_cliente.setText("Cliente");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel12))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel14)
                        .addGap(6, 6, 6)
                        .addComponent(jlOperador))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbImprimirPDF)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtcpf, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lb_cliente)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel12)
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jlOperador))
                .addGap(6, 6, 6)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jcbImprimirPDF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtcpf, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_cliente)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jtfValorPagar.setBackground(new java.awt.Color(255, 255, 255));
        jtfValorPagar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jtfValorPagar.setForeground(new java.awt.Color(255, 0, 51));
        jtfValorPagar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jtfValorPagar.setText("Total");
        jtfValorPagar.setOpaque(true);

        lb_subtotal.setBackground(new java.awt.Color(255, 255, 255));
        lb_subtotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lb_subtotal.setForeground(new java.awt.Color(102, 153, 255));
        lb_subtotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_subtotal.setText("0,00");
        lb_subtotal.setOpaque(true);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 153, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Subtotal");

        lb_valorunitario.setBackground(new java.awt.Color(255, 255, 255));
        lb_valorunitario.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lb_valorunitario.setForeground(new java.awt.Color(102, 153, 255));
        lb_valorunitario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_valorunitario.setText("0,00");
        lb_valorunitario.setOpaque(true);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 153, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Valor Unit.");

        lb_Quantidade.setBackground(new java.awt.Color(255, 255, 255));
        lb_Quantidade.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lb_Quantidade.setForeground(new java.awt.Color(102, 153, 255));
        lb_Quantidade.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_Quantidade.setText("0");
        lb_Quantidade.setOpaque(true);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 153, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Quantidade");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Valor total");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtfValorPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lb_Quantidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lb_valorunitario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lb_subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(1, 1, 1)
                .addComponent(lb_Quantidade)
                .addGap(26, 26, 26)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_valorunitario)
                .addGap(30, 30, 30)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_subtotal)
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfValorPagar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        jtfCodigoProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jtfCodigoProduto.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jtfCodigoProduto.setMaximumSize(new java.awt.Dimension(6, 50));
        jtfCodigoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoProdutoActionPerformed(evt);
            }
        });
        jtfCodigoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoProdutoKeyPressed(evt);
            }
        });

        tbProdutos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Código", "Produto", "Quant.", "Valor Unit.", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbProdutos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbProdutos.setRowHeight(30);
        tbProdutos.setSelectionBackground(new java.awt.Color(255, 204, 51));
        tbProdutos.setShowHorizontalLines(false);
        tbProdutos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbProdutosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbProdutos);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("F3 - Alterar quantidade");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("F5 - Pesquisar produto");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("F7 - Cancelar produto");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("F9 - Sair");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("F4 - Finalizar venda");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("F6 - Verificar estoque");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("F8 - Imprimir cupom manual");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(52, 52, 52)
                                .addComponent(jLabel15)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel1)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addContainerGap())
        );

        jmArquivo.setText("Arquivo");
        jmArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmArquivoActionPerformed(evt);
            }
        });

        jmiSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, 0));
        jmiSair.setText("Sair");
        jmiSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSairActionPerformed(evt);
            }
        });
        jmArquivo.add(jmiSair);

        jMenuBar1.add(jmArquivo);

        jmComandos.setText("Comandos");

        jmiAlterarQuantidade.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jmiAlterarQuantidade.setText("Alterar quantidade");
        jmiAlterarQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAlterarQuantidadeActionPerformed(evt);
            }
        });
        jmComandos.add(jmiAlterarQuantidade);

        jmiFinalizarVenda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        jmiFinalizarVenda.setText("Finalizar venda");
        jmiFinalizarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFinalizarVendaActionPerformed(evt);
            }
        });
        jmComandos.add(jmiFinalizarVenda);

        jmiPesquisarProduto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jmiPesquisarProduto.setText("Pesquisar produto");
        jmiPesquisarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPesquisarProdutoActionPerformed(evt);
            }
        });
        jmComandos.add(jmiPesquisarProduto);

        jmiEstoque.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jmiEstoque.setText("Verificar estoque");
        jmiEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEstoqueActionPerformed(evt);
            }
        });
        jmComandos.add(jmiEstoque);

        jmiCancelarProduto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        jmiCancelarProduto.setText("Cancelar produto");
        jmiCancelarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCancelarProdutoActionPerformed(evt);
            }
        });
        jmComandos.add(jmiCancelarProduto);

        jmiImprimirCupom.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
        jmiImprimirCupom.setText("Imprimir Cupom");
        jmiImprimirCupom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiImprimirCupomActionPerformed(evt);
            }
        });
        jmComandos.add(jmiImprimirCupom);

        jMenuBar1.add(jmComandos);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 282, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(21, 21, 21)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmArquivoActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jmArquivoActionPerformed

    private void jmiEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEstoqueActionPerformed
        // TODO add your handling code here:
         new ViewEstoquePDV().setVisible(true);
    }//GEN-LAST:event_jmiEstoqueActionPerformed

    private void jtfCodigoProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoKeyPressed
        // TODO add your handling code here:
        keyPressed(evt);
        atualizarTotal();
        
    }//GEN-LAST:event_jtfCodigoProdutoKeyPressed

    private void jtfCodigoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodigoProdutoActionPerformed

    private void jmiAlterarQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAlterarQuantidadeActionPerformed
        // TODO add your handling code here:
        ViewQuantidadePDV viewQuantidadePDV = new ViewQuantidadePDV(this, rootPaneCheckingEnabled);
        viewQuantidadePDV.setVisible(true);        
        quantidadeProduto = viewQuantidadePDV.getValorQuantidade();
    }//GEN-LAST:event_jmiAlterarQuantidadeActionPerformed

    private void jmiCancelarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCancelarProdutoActionPerformed
        //pegunta se realmente deseja excluir
        int linha = tbProdutos.getSelectedRow();
        String nome = (String) tbProdutos.getValueAt(linha, 2);
        int item = (int) tbProdutos.getValueAt(linha, 0);
        String codigo = (String) tbProdutos.getValueAt(linha, 1);
        String v = (String)tbProdutos.getValueAt(linha, 5);
        float valor = DataClasses.converterMoedaParaFloat(v.replace("R$ ", ""));
        
        int opcao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja"
                + " excluir o item: " + item + " \n" + "\n " + nome + "?", "Atenção", JOptionPane.YES_NO_OPTION);
        //se sim exclui, se não não faz nada    
        if (opcao == JOptionPane.OK_OPTION) {

            DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
            int linhaSelecionada = tbProdutos.getSelectedRow();
            System.out.print("Vc selecionou a linha" + linhaSelecionada);
            // Verificamos se existe realmente alguma linha selecionada
            if (linhaSelecionada < 0) {
                return;
            } else {
                // Remove a linha
                modelo.removeRow(linhaSelecionada);
                valorTotal -= valor;
                atualizarTotal();
                int index=0;
                for (ModelProdutos p : listaProdutos) {
                    if(p.getCodigo().equalsIgnoreCase(codigo)){
                        listaProdutos.remove(index);
                        break;
                    }
                    index++;
                }                
            }
        }jtfCodigoProduto.requestFocus();
        
    }//GEN-LAST:event_jmiCancelarProdutoActionPerformed

    private void jmiFinalizarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFinalizarVendaActionPerformed
        
        if(valorTotal>0){
        viewPagamentoPDV.setValorTotal(valorTotal);
        viewPagamentoPDV.setTotalPagar(valorTotal);
        viewPagamentoPDV.setTextFildValorTotal();
        viewPagamentoPDV.setVisible(true);
        zerarValoresCaixa();
        if (viewPagamentoPDV.getReturnStatus() == 1) {
            salvarVenda();
        }
        }
    }//GEN-LAST:event_jmiFinalizarVendaActionPerformed

    private void jmiPesquisarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPesquisarProdutoActionPerformed
        // TODO add your handling code here:
        ViewPesquisarProdutoPDV viewPesquisarProduto = new ViewPesquisarProdutoPDV(this, rootPaneCheckingEnabled);
        viewPesquisarProduto.setVisible(true);        
        codigoProduto = viewPesquisarProduto.getReturnCode();
        this.adicionarProdutoPesquisa(codigoProduto);
        //somaEAtualizaValorTotal();
        atualizarTotal();
    }//GEN-LAST:event_jmiPesquisarProdutoActionPerformed

    private void jmiSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jmiSairActionPerformed

    private void jmiImprimirCupomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiImprimirCupomActionPerformed
        // TODO add your handling code here:
        new ViewImprimirPDV(this, rootPaneCheckingEnabled).setVisible(true);
        
    }//GEN-LAST:event_jmiImprimirCupomActionPerformed

    private void tbProdutosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbProdutosKeyReleased
       
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE) {
            jtfCodigoProduto.requestFocus();
            tbProdutos.clearSelection();
        }
    }//GEN-LAST:event_tbProdutosKeyReleased

    private void txtcpfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcpfKeyReleased
        
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE) {
            jtfCodigoProduto.requestFocus();
        }else if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            DataClasses dc = new DataClasses();
            String cpf = txtcpf.getText();
            if(dc.validarCPF(cpf)){
                this.cpf = cpf;
                ModelCliente c = ModelCliente.retornarClientePorCPF(txtcpf.getText());
                lb_cliente.setText(c.getNome());
            }else{
                lb_cliente.setText("cpf inválido");
            }
            jtfCodigoProduto.requestFocus();
        }
    }//GEN-LAST:event_txtcpfKeyReleased

    private void adicionarValorCaixa() {
       
        if (modelVendas.getTipoPagamento() == 1) {
            valorDinheiro = modelVendas.getValorTotal();
            modelCaixa.setDinheiro(modelCaixa.getDinheiro() + valorDinheiro);
        } else if (modelVendas.getTipoPagamento() == 2) {
            valorCartao = modelVendas.getValorTotal();
            modelCaixa.setCartao(modelCaixa.getCartao() + valorCartao);
        } else if (modelVendas.getTipoPagamento() == 3) {
            valorCheque = modelVendas.getValorTotal();
            modelCaixa.setCheque(modelCaixa.getCheque() + valorCheque);
        } else if (modelVendas.getTipoPagamento() == 4) {
            valorVale = modelVendas.getValorTotal();
            modelCaixa.setVale(modelCaixa.getVale() + valorVale);
        }else if(modelVendas.getTipoPagamento() == 5){
            valorConvenio = modelVendas.getValorTotal();
            modelCaixa.setConvenio(modelCaixa.getConvenio()+ valorConvenio);
        }else if(modelVendas.getTipoPagamento() == 6){
            valorDebito = modelVendas.getValorTotal();
            modelCaixa.setDebito(modelCaixa.getDebito()+ valorDebito);
        }
        controllerCaixa.atualizarCaixaController(modelCaixa);
    }
    
    private void zerarValoresCaixa() {
        valorCartao = 0;
        valorCheque = 0;
        valorDinheiro = 0;
        valorVale = 0;
        valorTotal=0;
        valorDebito=0;
        valorConvenio=0;
    }
    
    //PEGA LETRAS DIGITADAS       
    public void keyPressed(java.awt.event.KeyEvent e) {
        if (e.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            ControllerProdutos controllerProdutos = new ControllerProdutos();
            ModelProdutos modelProdutos = new ModelProdutos();
            DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
            modelProdutos = controllerProdutos.getProdutosController( this.jtfCodigoProduto.getText() );
            lblProduto.setText(modelProdutos.getNome());

            int cont = tbProdutos.getRowCount();
            int qtd = 1;
            boolean novo = true;
            String cod = this.jtfCodigoProduto.getText();
            for (int i = 0; i < cont; i++) {           
            
                if (tbProdutos.getValueAt(i, 1).equals(cod)) {
                    
                    qtd = (int)tbProdutos.getValueAt(i, 3);
                    qtd+=quantidadeProduto;
                    float subtotal = qtd*modelProdutos.getValor();
                    tbProdutos.setValueAt(qtd, i, 3);
                    tbProdutos.setValueAt(nf.format(subtotal), i, 5);
                    novo = false;
                    lb_Quantidade.setText(String.valueOf(qtd));
                    lb_valorunitario.setText( nf.format(modelProdutos.getValor()));
                    lb_subtotal.setText( nf.format(subtotal) );
                    break;
                }
            }
            
            if (novo) {
                modelo.addRow(new Object[]{
                tbProdutos.getRowCount() + 1,
                modelProdutos.getCodigo(),
                modelProdutos.getNome(),
                quantidadeProduto,
                nf.format(modelProdutos.getValor()),
                nf.format(modelProdutos.getValor() * quantidadeProduto)
                     });
                lb_Quantidade.setText(String.valueOf(quantidadeProduto));
                lb_valorunitario.setText( nf.format(modelProdutos.getValor()));
                lb_subtotal.setText( nf.format(modelProdutos.getValor() * quantidadeProduto) );
            }
            valorTotal += quantidadeProduto*modelProdutos.getValor();
            quantidadeProduto = 1;
            listaProdutos.add(modelProdutos);
            this.jtfCodigoProduto.setText(null);
        }      
    }

    private void adicionarProdutoPesquisa(String pCodigoProduto) {
        ControllerProdutos controllerProdutos = new ControllerProdutos();
        ModelProdutos modelProdutos = new ModelProdutos();
        DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
        modelProdutos = controllerProdutos.getProdutosController(pCodigoProduto);
        lblProduto.setText(modelProdutos.getNome());
       
        //System.out.println(quantidadeProduto);

        int cont = tbProdutos.getRowCount();
        int qtd = 1;
        boolean novo = true;        
            
        for (int i = 0; i < cont; i++) {           
            
                if (tbProdutos.getValueAt(i, 1).equals(pCodigoProduto)) {
                    
                    qtd = (int)tbProdutos.getValueAt(i, 3);
                    qtd+=quantidadeProduto;
                    float subtotal = qtd*modelProdutos.getValor();
                    tbProdutos.setValueAt(qtd, i, 3);
                    tbProdutos.setValueAt(nf.format(subtotal), i, 5);
                    novo = false;
                    lb_Quantidade.setText(String.valueOf(qtd));
                    lb_valorunitario.setText( nf.format(modelProdutos.getValor()));
                    lb_subtotal.setText( nf.format(subtotal) );
                    break;
                }
            }    
        if (novo) {
                modelo.addRow(new Object[]{
                tbProdutos.getRowCount() + 1,
                modelProdutos.getCodigo(),
                modelProdutos.getNome(),
                quantidadeProduto,
                nf.format(modelProdutos.getValor()),
                nf.format(modelProdutos.getValor() * quantidadeProduto)
                     });
                lb_Quantidade.setText(String.valueOf(quantidadeProduto));
                lb_valorunitario.setText( nf.format(modelProdutos.getValor()));
                lb_subtotal.setText( nf.format(modelProdutos.getValor() * quantidadeProduto) );
            }
            valorTotal += quantidadeProduto*modelProdutos.getValor();
            quantidadeProduto = 1;
            listaProdutos.add(modelProdutos);
            this.jtfCodigoProduto.setText(null);
    }
    
    private void limparTabela(){
        DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
        modelo.setNumRows(0);
    }
    
    private void limparTextos(){
        lb_Quantidade.setText("0");
        lb_subtotal.setText("0,00");
        lb_valorunitario.setText("0,00");
        lblProduto.setText("Produto");
        jtfValorPagar.setText("0,00");
        txtcpf.setText("");
        this.cpf="";
    }
    /**
     * Soma e atualiza os valores total
     * @return 
     */
    private double somaEAtualizaValorTotal() {
        double soma = 0;
        double valor = 0;
        int cont = tbProdutos.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = Double.parseDouble(String.valueOf(tbProdutos.getValueAt(i, 4)));
            double subtotal = valor * (int)tbProdutos.getValueAt(i, 3);
            soma += subtotal;
        }
        return soma;
    }
    
    private void atualizarTotal(){
        this.jtfValorPagar.setText(nf.format(valorTotal));
    }
    
    public int getReturnStatus() {
        return returnStatus;
    }
    
    public float getValorTotal(){
        return valorTotal;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ViewPdv().setVisible(true);
            }
        });
    }
    /**
     * Imprimir cupom
     */
    private void imprimirCupom(){
        ControllerVendas controllerVendas = new ControllerVendas();
        controllerVendas.gerarRelatorioPDV(codigoVenda);
    }
    
    
    public String retornarUsuarioLogado(){
        return new ModelSessaoUsuario().nome;
    }
    
    
    private void configurar(){
        pNomeUsuario = retornarUsuarioLogado();
        jlOperador.setText(pNomeUsuario);
        jtfCodigoProduto.requestFocus();
        jmicliente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        jmicliente.setText("Pesquisar cliente");
        jmicliente.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                
            }
        });
        
        jmifechamento.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jmifechamento.setText("Fechar caixa");
        jmifechamento.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewFechamento vpagamento = new ViewFechamento(ViewPdv.this, rootPaneCheckingEnabled);
                vpagamento.setVisible(true);
                if(vpagamento.getStatus()==1){
                    dispose();
                }
            }
        });
        
        jmComandos.add(jmicliente);
        jmComandos.add(jmifechamento);
        
    }
    
    private boolean salvarVenda() {
           listaModelVendas = new ArrayList<>();
            listaProdutos = new ArrayList<>();
            String codigoProduto;
            int quantidade;
            BLDatas bl = new BLDatas();

            for (int i = 0; i < tbProdutos.getRowCount(); i++) {
                modelVendas = new ModelVendas();
                modelProdutos = new ModelProdutos();
                modelVendas.setClientesCodigo(1);
                modelVendas.setDesconto(viewPagamentoPDV.getDesconto());
                modelVendas.setValorTotal(viewPagamentoPDV.getValorTotal());
                try {
                    modelVendas.setDataVenda(bl.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
                } catch (Exception ex) {
                    Logger.getLogger(ViewVenda.class.getName()).log(Level.SEVERE, null, ex);
                }
                codigoProduto = tbProdutos.getValueAt(i, 1).toString();
                modelVendas.setProdutosCodigo(codigoProduto);
                
                float preco = DataClasses.converterMoedaParaFloat( tbProdutos.getValueAt(i, 5).toString() );
                
               modelVendas.setValor(preco);
                
                modelVendas.setQuantidade(Integer.parseInt(tbProdutos.getValueAt(i, 3).toString()));
                modelVendas.setTipoPagamento(controllerTipoPagamento.getTipoPagamentoController(viewPagamentoPDV.getTipoPagamento()).getCodigo());
                modelProdutos.setCodigo(codigoProduto);
                
                quantidade = controllerProdutos.getProdutosController(codigoProduto).getEstoque() - Integer.parseInt(tbProdutos.getValueAt(i, 3).toString());
                modelProdutos.setEstoque(quantidade);
                listaModelVendas.add(modelVendas);
                listaProdutos.add(modelProdutos);
            }
            modelVendas.setListamModelVendases(listaModelVendas);
            modelProdutos.setListaModelProdutoses(listaProdutos);
            
            //salvar venda
            codigoVenda = controllerVendas.salvarVendasController(modelVendas);
            if (codigoVenda > 0) {
                modelVendas.setCodigo(codigoVenda);
                //da baixa no estoque
                controllerProdutos.atualizarProdutosQuantidadeController(modelProdutos);
                //salvar lista de produtos
                controllerVendas.salvarVendasProdutosController(modelVendas);
                JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
                adicionarValorCaixa();
                limparTabela();
                limparTextos();
                viewPagamentoPDV.limparValores();
                
                if (jcbImprimirPDF.isSelected()) {
                    //imprimir cupom
                    imprimirCupom();
                }
                
                return true;
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
                return false;
            }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jcbImprimirPDF;
    private javax.swing.JLabel jlOperador;
    private javax.swing.JMenu jmArquivo;
    private javax.swing.JMenu jmComandos;
    private javax.swing.JMenuItem jmiAlterarQuantidade;
    private javax.swing.JMenuItem jmiCancelarProduto;
    private javax.swing.JMenuItem jmiEstoque;
    private javax.swing.JMenuItem jmiFinalizarVenda;
    private javax.swing.JMenuItem jmiImprimirCupom;
    private javax.swing.JMenuItem jmiPesquisarProduto;
    private javax.swing.JMenuItem jmiSair;
    private javax.swing.JFormattedTextField jtfCodigoProduto;
    private javax.swing.JLabel jtfValorPagar;
    private javax.swing.JLabel lb_Quantidade;
    private javax.swing.JLabel lb_cliente;
    private javax.swing.JLabel lb_subtotal;
    private javax.swing.JLabel lb_valorunitario;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JTable tbProdutos;
    private javax.swing.JFormattedTextField txtcpf;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JMenuItem jmicliente = new JMenuItem();
    private javax.swing.JMenuItem jmifechamento = new JMenuItem();
    
}
